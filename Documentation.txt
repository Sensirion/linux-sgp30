sgp30: Industrial IO driver for Sensirion I2C Multi-Pixel Gas Sensors

1. Overview

The sgp30 driver supports the Sensirion SGP30 and SGPC3 multi-pixel gas sensors.

2. Modes of Operation

Postprocessed Indoor Air Quality (IAQ) gas concentrations as well as raw gas
signals are available. Both signals can be humidity-compensated by the sensor.

2.1. IAQ Gas Concentrations

* tVOC (in_concentration_voc_input) at ppb precision (1e-9)
* CO2eq (in_concentration_co2_input) at ppm precision (1e-6) -- SGP30 only

2.1.1. IAQ Initialization
Before Indoor Air Quality values can be read, the IAQ mode must be initialized
by sending the "iaq_init" command from the data sheet to the sensor. The sgp30
driver performs this initialization automatically on instantiation.

After initializing IAQ, at least one IAQ signal must be read out every second
(SGP30) / every two seconds (SGPC3) for the sensor to correctly maintain its
internal baseline. The driver continuously performs this task in a background
thread and caches the latest measurement for retrieval.

For the first 15s of operation after initialization, default values are returned
by the sensor. Default values are not returned by the driver, instead an -EBUSY
error is returned.

2.1.2. Pausing and Resuming IAQ

For best performance and faster subsequent startup times, the baseline should be
saved once every hour, after 12h of operation. The baseline is restored by
writing the last known baseline back to set_iaq_baseline.

    Saving the baseline:
    $ baseline=$(cat in_iaq_baseline)

    Restoring the baseline:
    $ echo -n $baseline > set_iaq_baseline

2.2. Humidity Compensation

The SGP features an on-chip humidity compensation that requires the (in-device)
environment's absolute humidity.

Set the absolute humidity by writing the absolute humidity concentration (in
mg/m^3) to set_absolute_humidity. The absolute humidity is obtained by
converting the relative humidity and temperature. The following units are used:
AH in mg/m^3, RH in percent (0..100), T in degrees Celsius, and exp() being the
base-e exponential function.

                  RH                 17.62 * T
                ----- * 6.112 * exp(------------)
                100.0                243.12 + T
  AH = 216.7 * ---------------------------------- * 1000
                            273.15 + T

Writing a value of 0 to set_absolute_humidity disables the humidity
compensation. Devices not supporting humidity compensation (SGPC3 with feature
set < 0.6) will report an error (-EINVAL) when setting the humidity.

2.3. On-chip self test

    $ cat in_selftest

in_selftest returns OK or FAILED.

On the SGP30, self test interferes with IAQ operations and requires a
re-initialization thereof. If a valid baseline is available (after 12h of
operation), the driver will take care of resuming the operation after the
selftest, otherwise the "iaq_init" procedure will be restarted.

2.4 Ultra Low Power Mode (SGPC3 Feature Set 0.6+)

The low-power SGPC3 features an ultra-low-power mode in which the sensor is only
polled every 30s instead of every 2s. The polling interval in the background
thread is adjusted by the driver when changing the power mode with
set_power_mode. Supported options: {"low", "ultra-low"}. Changing the power mode
on sensors without power-mode switching results in an -EINVAL error.
